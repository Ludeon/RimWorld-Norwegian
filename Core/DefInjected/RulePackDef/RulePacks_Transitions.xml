<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN: die(SUBJECT_flesh!=Mechanoid,p=2)->die -->
  <Transition_Died.rulePack.rulesStrings.0>die(SUBJECT_flesh!=Mechanoid,p=2)->die</Transition_Died.rulePack.rulesStrings.0>
  <!-- EN: die(SUBJECT_flesh!=Mechanoid)->perish -->
  <Transition_Died.rulePack.rulesStrings.1>die(SUBJECT_flesh!=Mechanoid)->perish</Transition_Died.rulePack.rulesStrings.1>
  <!-- EN: die(SUBJECT_flesh!=Mechanoid)->expire -->
  <Transition_Died.rulePack.rulesStrings.2>die(SUBJECT_flesh!=Mechanoid)->expire</Transition_Died.rulePack.rulesStrings.2>
  <!-- EN: die(SUBJECT_flesh==Mechanoid)->shut down -->
  <Transition_Died.rulePack.rulesStrings.3>die(SUBJECT_flesh==Mechanoid)->shut down</Transition_Died.rulePack.rulesStrings.3>
  <!-- EN: die(SUBJECT_flesh==Mechanoid)->stop functioning -->
  <Transition_Died.rulePack.rulesStrings.4>die(SUBJECT_flesh==Mechanoid)->stop functioning</Transition_Died.rulePack.rulesStrings.4>
  <!-- EN: die(SUBJECT_flesh==Mechanoid)->lose power -->
  <Transition_Died.rulePack.rulesStrings.5>die(SUBJECT_flesh==Mechanoid)->lose power</Transition_Died.rulePack.rulesStrings.5>
  <!-- EN: died(SUBJECT_flesh!=Mechanoid,p=2)->died -->
  <Transition_Died.rulePack.rulesStrings.6>died(SUBJECT_flesh!=Mechanoid,p=2)->died</Transition_Died.rulePack.rulesStrings.6>
  <!-- EN: died(SUBJECT_flesh!=Mechanoid)->perished -->
  <Transition_Died.rulePack.rulesStrings.7>died(SUBJECT_flesh!=Mechanoid)->perished</Transition_Died.rulePack.rulesStrings.7>
  <!-- EN: died(SUBJECT_flesh!=Mechanoid)->expired -->
  <Transition_Died.rulePack.rulesStrings.8>died(SUBJECT_flesh!=Mechanoid)->expired</Transition_Died.rulePack.rulesStrings.8>
  <!-- EN: died(SUBJECT_flesh==Mechanoid)->shut down -->
  <Transition_Died.rulePack.rulesStrings.9>died(SUBJECT_flesh==Mechanoid)->shut down</Transition_Died.rulePack.rulesStrings.9>
  <!-- EN: died(SUBJECT_flesh==Mechanoid)->stopped functioning -->
  <Transition_Died.rulePack.rulesStrings.10>died(SUBJECT_flesh==Mechanoid)->stopped functioning</Transition_Died.rulePack.rulesStrings.10>
  <!-- EN: died(SUBJECT_flesh==Mechanoid)->lost power -->
  <Transition_Died.rulePack.rulesStrings.11>died(SUBJECT_flesh==Mechanoid)->lost power</Transition_Died.rulePack.rulesStrings.11>
  
  <!-- EN: die(p=3)->explode [flavor] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.0>die(p=3)->explode [flavor]</Transition_DiedExplosive.rulePack.rulesStrings.0>
  <!-- EN: die(p=3)->explode [flavorsuffix] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.1>die(p=3)->explode [flavorsuffix]</Transition_DiedExplosive.rulePack.rulesStrings.1>
  <!-- EN: die->detonate [flavor] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.2>die->detonate [flavor]</Transition_DiedExplosive.rulePack.rulesStrings.2>
  <!-- EN: die->detonate [flavorsuffix] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.3>die->detonate [flavorsuffix]</Transition_DiedExplosive.rulePack.rulesStrings.3>
  <!-- EN: die->burst [flavor] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.4>die->burst [flavor]</Transition_DiedExplosive.rulePack.rulesStrings.4>
  <!-- EN: die->burst [flavorsuffix] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.5>die->burst [flavorsuffix]</Transition_DiedExplosive.rulePack.rulesStrings.5>
  <!-- EN: died(p=3)->exploded [flavor] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.6>died(p=3)->exploded [flavor]</Transition_DiedExplosive.rulePack.rulesStrings.6>
  <!-- EN: died->detonated [flavor] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.7>died->detonated [flavor]</Transition_DiedExplosive.rulePack.rulesStrings.7>
  <!-- EN: died->burst [flavor] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.8>died->burst [flavor]</Transition_DiedExplosive.rulePack.rulesStrings.8>
  <!-- EN: flavor(p=0.2)->in a chemical [fireball] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.9>flavor(p=0.2)->in a chemical [fireball]</Transition_DiedExplosive.rulePack.rulesStrings.9>
  <!-- EN: flavor->in a [Color] [fireball] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.10>flavor->in a [Color] [fireball]</Transition_DiedExplosive.rulePack.rulesStrings.10>
  <!-- EN: flavor->in a [AdjectiveLarge] [fireball] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.11>flavor->in a [AdjectiveLarge] [fireball]</Transition_DiedExplosive.rulePack.rulesStrings.11>
  <!-- EN: flavor(p=4)->in a [fireball] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.12>flavor(p=4)->in a [fireball]</Transition_DiedExplosive.rulePack.rulesStrings.12>
  <!-- EN: flavor(p=4)-> -->
  <Transition_DiedExplosive.rulePack.rulesStrings.13>flavor(p=4)-></Transition_DiedExplosive.rulePack.rulesStrings.13>
  <!-- EN: flavorsuffix->, scattering [pieces] [everywhere] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.14>flavorsuffix->, scattering [pieces] [everywhere]</Transition_DiedExplosive.rulePack.rulesStrings.14>
  <!-- EN: flavorsuffix(SUBJECT_flesh!=Mechanoid,p=2)->, scattering [Gore] [everywhere] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.15>flavorsuffix(SUBJECT_flesh!=Mechanoid,p=2)->, scattering [Gore] [everywhere]</Transition_DiedExplosive.rulePack.rulesStrings.15>
  <!-- EN: flavorsuffix(SUBJECT_flesh!=Mechanoid)->, leaving a small pile of [Gore] -->
  <Transition_DiedExplosive.rulePack.rulesStrings.16>flavorsuffix(SUBJECT_flesh!=Mechanoid)->, leaving a small pile of [Gore]</Transition_DiedExplosive.rulePack.rulesStrings.16>
  <!-- EN: flavorsuffix->, leaving a small crater -->
  <Transition_DiedExplosive.rulePack.rulesStrings.17>flavorsuffix->, leaving a small crater</Transition_DiedExplosive.rulePack.rulesStrings.17>
  <!-- EN: flavorsuffix(p=4)-> -->
  <Transition_DiedExplosive.rulePack.rulesStrings.18>flavorsuffix(p=4)-></Transition_DiedExplosive.rulePack.rulesStrings.18>
  <!-- EN: fireball(p=3)->fireball -->
  <Transition_DiedExplosive.rulePack.rulesStrings.19>fireball(p=3)->fireball</Transition_DiedExplosive.rulePack.rulesStrings.19>
  <!-- EN: fireball->flameball -->
  <Transition_DiedExplosive.rulePack.rulesStrings.20>fireball->flameball</Transition_DiedExplosive.rulePack.rulesStrings.20>
  <!-- EN: fireball->shockwave -->
  <Transition_DiedExplosive.rulePack.rulesStrings.21>fireball->shockwave</Transition_DiedExplosive.rulePack.rulesStrings.21>
  <!-- EN: fireball->conflagration -->
  <Transition_DiedExplosive.rulePack.rulesStrings.22>fireball->conflagration</Transition_DiedExplosive.rulePack.rulesStrings.22>
  <!-- EN: pieces->pieces -->
  <Transition_DiedExplosive.rulePack.rulesStrings.23>pieces->pieces</Transition_DiedExplosive.rulePack.rulesStrings.23>
  <!-- EN: pieces->fragments -->
  <Transition_DiedExplosive.rulePack.rulesStrings.24>pieces->fragments</Transition_DiedExplosive.rulePack.rulesStrings.24>
  <!-- EN: everywhere->everywhere -->
  <Transition_DiedExplosive.rulePack.rulesStrings.25>everywhere->everywhere</Transition_DiedExplosive.rulePack.rulesStrings.25>
  <!-- EN: everywhere->far and wide -->
  <Transition_DiedExplosive.rulePack.rulesStrings.26>everywhere->far and wide</Transition_DiedExplosive.rulePack.rulesStrings.26>
  
  <!-- EN: r_logentry(p=1.5)->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [die]. -->
  <Transition_DiedInclude.rulePack.rulesStrings.0>r_logentry(p=1.5)->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [die].</Transition_DiedInclude.rulePack.rulesStrings.0>
  <!-- EN: r_logentry(p=1.5)->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [die]. -->
  <Transition_DiedInclude.rulePack.rulesStrings.1>r_logentry(p=1.5)->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [die].</Transition_DiedInclude.rulePack.rulesStrings.1>
  <!-- EN: r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNoun] [flavorsuffix]. -->
  <Transition_DiedInclude.rulePack.rulesStrings.2>r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNoun] [flavorsuffix].</Transition_DiedInclude.rulePack.rulesStrings.2>
  <!-- EN: r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNounPretty] [flavorsuffix]. -->
  <Transition_DiedInclude.rulePack.rulesStrings.3>r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNounPretty] [flavorsuffix].</Transition_DiedInclude.rulePack.rulesStrings.3>
  <!-- EN: r_logentry->[SUBJECT_definite] [died]. -->
  <Transition_DiedInclude.rulePack.rulesStrings.4>r_logentry->[SUBJECT_definite] [died].</Transition_DiedInclude.rulePack.rulesStrings.4>
  <!-- EN: r_logentry->[SUBJECT_definite] [died] [flavorsuffix]. -->
  <Transition_DiedInclude.rulePack.rulesStrings.5>r_logentry->[SUBJECT_definite] [died] [flavorsuffix].</Transition_DiedInclude.rulePack.rulesStrings.5>
  
  <!-- EN: r_logentry->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [collapsemeta]. -->
  <Transition_Downed.rulePack.rulesStrings.0>r_logentry->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [collapsemeta].</Transition_Downed.rulePack.rulesStrings.0>
  <!-- EN: r_logentry->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [collapsemeta]. -->
  <Transition_Downed.rulePack.rulesStrings.1>r_logentry->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [collapsemeta].</Transition_Downed.rulePack.rulesStrings.1>
  <!-- EN: r_logentry->[CULPRITHEDIFF_labelNoun] made [SUBJECT_definite] [collapsemeta]. -->
  <Transition_Downed.rulePack.rulesStrings.2>r_logentry->[CULPRITHEDIFF_labelNoun] made [SUBJECT_definite] [collapsemeta].</Transition_Downed.rulePack.rulesStrings.2>
  <!-- EN: r_logentry->[CULPRITHEDIFF_labelNounPretty] made [SUBJECT_definite] [collapsemeta]. -->
  <Transition_Downed.rulePack.rulesStrings.3>r_logentry->[CULPRITHEDIFF_labelNounPretty] made [SUBJECT_definite] [collapsemeta].</Transition_Downed.rulePack.rulesStrings.3>
  <!-- EN: r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNoun]. -->
  <Transition_Downed.rulePack.rulesStrings.4>r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNoun].</Transition_Downed.rulePack.rulesStrings.4>
  <!-- EN: r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNounPretty]. -->
  <Transition_Downed.rulePack.rulesStrings.5>r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNounPretty].</Transition_Downed.rulePack.rulesStrings.5>
  <!-- EN: r_logentry(p=0.1)->[SUBJECT_definite] [collapsedmeta]. -->
  <Transition_Downed.rulePack.rulesStrings.6>r_logentry(p=0.1)->[SUBJECT_definite] [collapsedmeta].</Transition_Downed.rulePack.rulesStrings.6>
  <!-- EN: collapse->collapse -->
  <Transition_Downed.rulePack.rulesStrings.7>collapse->collapse</Transition_Downed.rulePack.rulesStrings.7>
  <!-- EN: collapse->drop -->
  <Transition_Downed.rulePack.rulesStrings.8>collapse->drop</Transition_Downed.rulePack.rulesStrings.8>
  <!-- EN: collapse(SUBJECT_flesh!=Mechanoid)->crumple -->
  <Transition_Downed.rulePack.rulesStrings.9>collapse(SUBJECT_flesh!=Mechanoid)->crumple</Transition_Downed.rulePack.rulesStrings.9>
  <!-- EN: collapse(SUBJECT_flesh==Mechanoid)->crash -->
  <Transition_Downed.rulePack.rulesStrings.10>collapse(SUBJECT_flesh==Mechanoid)->crash</Transition_Downed.rulePack.rulesStrings.10>
  <!-- EN: collapse(SUBJECT_flesh==Mechanoid)->lock up -->
  <Transition_Downed.rulePack.rulesStrings.11>collapse(SUBJECT_flesh==Mechanoid)->lock up</Transition_Downed.rulePack.rulesStrings.11>
  <!-- EN: collapse(SUBJECT_flesh==Mechanoid)->lose main power -->
  <Transition_Downed.rulePack.rulesStrings.12>collapse(SUBJECT_flesh==Mechanoid)->lose main power</Transition_Downed.rulePack.rulesStrings.12>
  <!-- EN: collapsed->collapsed -->
  <Transition_Downed.rulePack.rulesStrings.13>collapsed->collapsed</Transition_Downed.rulePack.rulesStrings.13>
  <!-- EN: collapsed->dropped -->
  <Transition_Downed.rulePack.rulesStrings.14>collapsed->dropped</Transition_Downed.rulePack.rulesStrings.14>
  <!-- EN: collapsed(SUBJECT_flesh!=Mechanoid)->crumpled -->
  <Transition_Downed.rulePack.rulesStrings.15>collapsed(SUBJECT_flesh!=Mechanoid)->crumpled</Transition_Downed.rulePack.rulesStrings.15>
  <!-- EN: collapsed(SUBJECT_flesh==Mechanoid)->crashed -->
  <Transition_Downed.rulePack.rulesStrings.16>collapsed(SUBJECT_flesh==Mechanoid)->crashed</Transition_Downed.rulePack.rulesStrings.16>
  <!-- EN: collapsed(SUBJECT_flesh==Mechanoid)->locked up -->
  <Transition_Downed.rulePack.rulesStrings.17>collapsed(SUBJECT_flesh==Mechanoid)->locked up</Transition_Downed.rulePack.rulesStrings.17>
  <!-- EN: collapsed(SUBJECT_flesh==Mechanoid)->lost main power -->
  <Transition_Downed.rulePack.rulesStrings.18>collapsed(SUBJECT_flesh==Mechanoid)->lost main power</Transition_Downed.rulePack.rulesStrings.18>
  <!-- EN: helplessly->helplessly -->
  <Transition_Downed.rulePack.rulesStrings.19>helplessly->helplessly</Transition_Downed.rulePack.rulesStrings.19>
  <!-- EN: helplessly(SUBJECT_flesh!=Mechanoid)->unconscious -->
  <Transition_Downed.rulePack.rulesStrings.20>helplessly(SUBJECT_flesh!=Mechanoid)->unconscious</Transition_Downed.rulePack.rulesStrings.20>
  <!-- EN: helplessly(SUBJECT_flesh!=Mechanoid)->weakly -->
  <Transition_Downed.rulePack.rulesStrings.21>helplessly(SUBJECT_flesh!=Mechanoid)->weakly</Transition_Downed.rulePack.rulesStrings.21>
  <!-- EN: helplessly(SUBJECT_flesh!=Mechanoid)->feebly -->
  <Transition_Downed.rulePack.rulesStrings.22>helplessly(SUBJECT_flesh!=Mechanoid)->feebly</Transition_Downed.rulePack.rulesStrings.22>
  <!-- EN: helplessly(SUBJECT_flesh==Mechanoid)->uncontrollably -->
  <Transition_Downed.rulePack.rulesStrings.23>helplessly(SUBJECT_flesh==Mechanoid)->uncontrollably</Transition_Downed.rulePack.rulesStrings.23>
  <!-- EN: collapsemeta->[collapse] -->
  <Transition_Downed.rulePack.rulesStrings.24>collapsemeta->[collapse]</Transition_Downed.rulePack.rulesStrings.24>
  <!-- EN: collapsemeta(p=0.5)->[collapse] [helplessly] -->
  <Transition_Downed.rulePack.rulesStrings.25>collapsemeta(p=0.5)->[collapse] [helplessly]</Transition_Downed.rulePack.rulesStrings.25>
  <!-- EN: collapsedmeta->[collapsed] -->
  <Transition_Downed.rulePack.rulesStrings.26>collapsedmeta->[collapsed]</Transition_Downed.rulePack.rulesStrings.26>
  <!-- EN: collapsedmeta(p=0.5)->[collapsed] [helplessly] -->
  <Transition_Downed.rulePack.rulesStrings.27>collapsedmeta(p=0.5)->[collapsed] [helplessly]</Transition_Downed.rulePack.rulesStrings.27>
  
  <!-- EN: duetoa->due to -->
  <Transition_Include.rulePack.rulesStrings.0>duetoa->due to</Transition_Include.rulePack.rulesStrings.0>
  <!-- EN: duetoa(p=0.5)->because of -->
  <Transition_Include.rulePack.rulesStrings.1>duetoa(p=0.5)->because of</Transition_Include.rulePack.rulesStrings.1>
  <!-- EN: duetoa(p=0.5)->thanks to -->
  <Transition_Include.rulePack.rulesStrings.2>duetoa(p=0.5)->thanks to</Transition_Include.rulePack.rulesStrings.2>
  
</LanguageData>